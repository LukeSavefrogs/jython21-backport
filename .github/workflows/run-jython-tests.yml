# https://search.maven.org/artifact/org.python/jython
# https://search.maven.org/artifact/org.python/jython-installer
# https://search.maven.org/artifact/org.python/jython-standalone
# https://search.maven.org/artifact/org.python/jython-slim

# https://sourceforge.net/projects/jython/files/jython/

# Workflow inspired by:
#    https://github.com/jython/jython/blob/master/.github/workflows/launcher-test.yml
name: "Jython tests"

run-name: "Run Jython tests"

on:
  push:
  pull_request:

jobs:
  test:
    name: "Test"
    strategy:
        fail-fast: false
        matrix:
            os: 
                - ubuntu-latest
                - windows-latest
            jython_version: 
                - "2.7.3"
                - "2.7.2"
                - "2.7.1"
                - "2.7.0"
                - "2.5.3"
                - "2.5.2"
                - "2.5.1"
                - "2.5.0"
                - "2.2.1"
                - "2.2"

    runs-on: ${{ matrix.os }}
    defaults:
        run:
          shell: bash
    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'

    - name: Determine Jython installer URL
      id: jython_installer_url
      run: |
        url_maven="https://repo1.maven.org/maven2/org/python/jython-installer/${{ matrix.jython_version }}/jython-installer-${{ matrix.jython_version }}.jar";
        url_sourceforge="https://master.dl.sourceforge.net/project/jython/jython/${{ matrix.jython_version }}/jython_installer-${{ matrix.jython_version }}.jar?viasf=1";
        
        printf "Testing:\n"
        printf -- "- Maven      : %s\n" "${url_maven}";
        printf -- "- SourceForge: %s\n" "${url_sourceforge}";
        
        maven_headers="$(curl -sIL "${url_maven}")";

        if echo "${maven_headers}" | grep -qE "HTTP/([0-9.]+) 200 (OK)?"; then
            download_url="${url_maven}";
        else
            download_url="${url_sourceforge}";
        fi

        echo "Download URL: ${download_url}"
        echo "::set-output name=download_url::${download_url}"

    - name: Download Jython Installer
      run: |
        curl -sL "${{ steps.jython_installer_url.outputs.download_url }}" --output /tmp/jython_installer.jar;
    
    - name: Install Jython
      run: |
            # Installation types:
            # - all       : everything (including src)
            # - standard  : core, mod, demo, doc, ensurepip
            #               standard is the default
            # - minimum   : core
            # - standalone: install a single, executable .jar,
            #               containing all the modules
            #
            # Note - standalone installation may fail with the following stacktrace (tested on 2.7.2):1
            # org.python.util.install.InstallerException: Error accessing jar file
            #     at org.python.util.install.JarInstaller.inflate(JarInstaller.java:177)
            #     at org.python.util.install.ConsoleInstaller.install(ConsoleInstaller.java:66)
            #     at org.python.util.install.Installation.internalMain(Installation.java:389)
            #     at org.python.util.install.Installation.main(Installation.java:43)
            # Caused by: java.util.zip.ZipException: duplicate entry: module-info.class
            #     at java.util.zip.ZipOutputStream.putNextEntry(ZipOutputStream.java:232)
            #     at java.util.jar.JarOutputStream.putNextEntry(JarOutputStream.java:109)
            #     at org.python.util.install.StandalonePackager.addJarFile(StandalonePackager.java:92)
            #     at org.python.util.install.JarInstaller.inflate(JarInstaller.java:163)
            #     ... 3 more

            # This is why I use the standard installation
            # java -jar /tmp/jython_installer.jar \
            #     --silent \
            #     --directory ~/jython/ \
            #     --type standalone;

            java -jar /tmp/jython_installer.jar \
                --silent \
                --directory ~/jython/ \
                --type standard;
    
    - name: Run Jython
      run: |
        java -jar ~/jython/jython.jar -c 'import sys, os; print(os.name, sys.version)';